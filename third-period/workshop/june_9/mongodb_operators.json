[
  {
    "name": "eq",
    "description": "Compara si un valor es igual a otro.",
    "mean": "El campo1 es igual a 5.",
    "sintax": "{ campo1: { $eq: 5 } }",
    "type": "comparacion"
  },
  {
    "name": "ne",
    "description": "Compara si un valor NO es igual a otro.",
    "mean": "El campo1 es diferente de 5.",
    "sintax": "{ campo1: { $ne: 5 } }",
    "type": "comparacion"
  },
  {
    "name": "gt",
    "description": "Compara si un valor es mayor que otro.",
    "mean": "El campo1 es mayor que 10.",
    "sintax": "{ campo1: { $gt: 10 } }",
    "type": "comparacion"
  },
  {
    "name": "gte",
    "description": "Compara si un valor es mayor o igual que otro.",
    "mean": "El campo1 es mayor o igual a 10.",
    "sintax": "{ campo1: { $gte: 10 } }",
    "type": "comparacion"
  },
  {
    "name": "lt",
    "description": "Compara si un valor es menor que otro.",
    "mean": "El campo1 es menor que 10.",
    "sintax": "{ campo1: { $lt: 10 } }",
    "type": "comparacion"
  },
  {
    "name": "lte",
    "description": "Compara si un valor es menor o igual que otro.",
    "mean": "El campo1 es menor o igual a 10.",
    "sintax": "{ campo1: { $lte: 10 } }",
    "type": "comparacion"
  },
  {
    "name": "in",
    "description": "Verifica si un campo está dentro de un conjunto de valores.",
    "mean": "El campo1 es igual a uno de los valores del arreglo [1, 2, 3].",
    "sintax": "{ campo1: { $in: [1, 2, 3] } }",
    "type": "comparacion"
  },
  {
    "name": "nin",
    "description": "Verifica si un campo NO está dentro de un conjunto de valores.",
    "mean": "El campo1 no es igual a ninguno de los valores del arreglo [1, 2, 3].",
    "sintax": "{ campo1: { $nin: [1, 2, 3] } }",
    "type": "comparacion"
  },
  {
    "name": "and",
    "description": "Ambas condiciones deben cumplirse.",
    "mean": "El campo1 es mayor que 5 y el campo2 menor que 20.",
    "sintax": "{ $and: [ { campo1: { $gt: 5 } }, { campo2: { $lt: 20 } } ] }",
    "type": "logico"
  },
  {
    "name": "or",
    "description": "Al menos una condición debe cumplirse.",
    "mean": "El campo1 es mayor que 5 o el campo2 menor que 20.",
    "sintax": "{ $or: [ { campo1: { $gt: 5 } }, { campo2: { $lt: 20 } } ] }",
    "type": "logico"
  },
  {
    "name": "not_simple",
    "description": "Niega una condición simple.",
    "mean": "El campo1 NO es mayor que 10.",
    "sintax": "{ campo1: { $not: { $gt: 10 } } }",
    "type": "logico"
  },
  {
    "name": "nor",
    "description": "Ninguna de las condiciones debe cumplirse.",
    "mean": "Ni el campo1 es igual a 5 ni el campo2 es menor que 3.",
    "sintax": "{ $nor: [ { campo1: { $eq: 5 } }, { campo2: { $lt: 3 } } ] }",
    "type": "logico"
  },
  {
    "name": "expr_eq",
    "description": "Compara si dos campos son iguales usando $expr.",
    "mean": "El valor del campo1 es igual al del campo2.",
    "sintax": "{ $expr: { $eq: [\"$campo1\", \"$campo2\"] } }",
    "type": "expr"
  },
  {
    "name": "expr_gt",
    "description": "Compara si un campo es mayor que otro usando $expr.",
    "mean": "El campo1 es mayor que el campo2.",
    "sintax": "{ $expr: { $gt: [\"$campo1\", \"$campo2\"] } }",
    "type": "expr"
  },
  {
    "name": "not_expr",
    "description": "Niega una comparación entre campos usando $expr.",
    "mean": "El campo2 NO es mayor que campo3.",
    "sintax": "{ campo1: { $not: { $expr: { $gt: [\"$campo2\", \"$campo3\"] } } } }",
    "type": "expr"
  },
  {
    "name": "where_simple",
    "description": "Evalúa una condición con lógica JavaScript.",
    "mean": "La suma de campo1 y campo2 es mayor que 100.",
    "sintax": "{ $where: \"this.campo1 + this.campo2 > 100\" }",
    "type": "where"
  },
  {
    "name": "not_where",
    "description": "Niega una condición expresada en JavaScript.",
    "mean": "El campo1 NO es menor que 10.",
    "sintax": "{ campo1: { $not: { $where: \"this.campo1 < 10\" } } }",
    "type": "where"
  },
  {
    "name": "nor_where",
    "description": "Ninguna condición debe cumplirse, incluyendo lógica JavaScript.",
    "mean": "Ni campo1 es igual a valor1 ni campo2 es 'inactivo'.",
    "sintax": "{ $nor: [ { campo1: valor1 }, { $where: \"this.campo2 == 'inactivo'\" } ] }",
    "type": "where"
  },
  {
    "name": "expr_where",
    "description": "Combina lógica de comparación entre campos con lógica personalizada.",
    "mean": "El campo1 es mayor o igual que campo2 Y campo3 es mayor que 10.",
    "sintax": "{ $and: [ { $expr: { $gte: [\"$campo1\", \"$campo2\"] } }, { $where: \"this.campo3 > 10\" } ] }",
    "type": "mixto"
  },
  {
    "name": "and_where",
    "description": "Combina condiciones estándar con lógica JavaScript.",
    "mean": "El campo1 es igual a valor1 y campo2 es menor que 100.",
    "sintax": "{ $and: [ { campo1: valor1 }, { $where: \"this.campo2 < 100\" } ] }",
    "type": "mixto"
  },
  {
    "name": "and_expr_where",
    "description": "Combina $expr con lógica JavaScript.",
    "mean": "Campo1 es menor o igual que campo2 Y campo3 no es nulo.",
    "sintax": "{ $and: [ { $expr: { $lte: [\"$campo1\", \"$campo2\"] } }, { $where: \"this.campo3 != null\" } ] }",
    "type": "mixto"
  }
]